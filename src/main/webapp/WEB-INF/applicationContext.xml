<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-3.0.xsd
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc.xsd
	http://www.springframework.org/schema/security 
	http://www.springframework.org/schema/security/spring-security-3.0.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">


	<!-- Scaneamento das classes anotadas nao precisa mais declarar as classes 
		anotadas <bean class="com.htcursos.model.dao.UsuarioDAO" /> -->

	<context:component-scan base-package="br.com.sarp" />
	<!-- Configurando um data source com os dados do banco de dados -->

	<bean id="postgresqlDataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="org.postgresql.Driver"></property>
		<property name="url" value="jdbc:postgresql://localhost:5432/sarpDb"></property>
		<property name="username" value="postgres"></property>
		<property name="password" value="nordesteba2009"></property>
	</bean>


	<!-- Criando um EntityManager value="postgresqlDataSource" -->

	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<!-- Referencia as propriedades do banco -->
		<property name="dataSource" ref="postgresqlDataSource" />

		<!-- informa o adapter Jpa , Hibernate -->
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="generateDdl" value="true"></property>
				<property name="showSql" value="true"></property>
				<property name="databasePlatform" value="org.hibernate.dialect.PostgreSQLDialect"></property>
			</bean>
		</property>
	</bean>

	<!-- este bean habiliat a injecao de persistencia -->
	<bean
		class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />

	<!-- Construção do gerenciador de transações -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<!-- vinculando ao Entitymanager -->
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<!-- Ao anotar @transaction ira chamar o gerenciador de transações -->
	<tx:annotation-driven transaction-manager="transactionManager"
		proxy-target-class="true" />

	<!-- View Scope Integracao do Spring com JSF -->

	<bean class="org.springframework.beans.factory.config.CustomScopeConfigurer">
		<property name="scopes">
			<map>
				<entry key="view">
					<bean class="br.com.sarp.controller.util.ViewScope"></bean>
				</entry>
			</map>
		</property>
	</bean>

	<!-- Spring Security -->

	<security:http access-denied-page="/All/index.xhtml" auto-config="false" use-expressions="true" entry-point-ref="authenticationEntryPoint">

		<security:logout invalidate-session="true"
			logout-success-url="/login.xhtml" logout-url="/j_spring_security_logout" />

		<security:intercept-url pattern="/Adm/*"
			access="hasRole('ROLE_ADMIN')" />

		<security:intercept-url pattern="/Operacoes/*"
			access="hasRole('ROLE_ADMIN')" />

		<security:intercept-url pattern="/Manutencao/*"
			access="hasRole('ROLE_ADMIN')" />

		<security:intercept-url pattern="/Gerencia/*"
			access="hasRole('ROLE_ADMIN')" />


		<security:intercept-url pattern="/All/*"
			access="hasRole('ROLE_ADMIN') OR hasRole('ROLE_CMTE')" />

		<security:intercept-url pattern="/Tripulante/Cmte/*"
			access="hasRole('ROLE_CMTE')" />

		<security:custom-filter ref="authenticationFilter"
			position="FORM_LOGIN_FILTER" />

	</security:http>

	<bean id="authenticationFilter" class="br.com.sarp.model.dao.AutenticacaoFilter"
		p:authenticationManager-ref="authenticationManager" />

	<bean id="authenticationEntryPoint"
		class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint"
		p:loginFormUrl="/login.xhtml" />

	<security:authentication-manager alias="authenticationManager" />
</beans>
